<?php

/**
 * Implements hook_menu().
 */
function my_node_message_menu() {
  $items['admin/myapi/my_node_message'] = array(
    'title' => 'Розсилання нод',
    'description' => 'Розсилання нод',
    'page callback' => 'my_node_message_table_callback',
    'access arguments' => array('view my_node_message table'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'my_node_message.admin.inc',
  );
  $items['admin/myapi/my_node_message/table'] = array(
    'title' => 'Розсилання нод',
    'access arguments' => array('view my_node_message table'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  );
  $items['admin/myapi/my_node_message/add'] = array(
    'title' => 'Додати розсилку для типу нод',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_node_message_add_form'),
    'access arguments' => array('administer my_node_message'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'my_node_message.admin.inc',
  );
  $items['admin/myapi/my_node_message/add/%my_node_message'] = array(
    'title' => 'Редагувати розсилку для типу нод',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_node_message_add_form', 4),
    'access arguments' => array('administer my_node_message'),
    'type' => MENU_CALLBACK,
    'file' => 'my_node_message.admin.inc',
  );
  $items['admin/myapi/my_node_message/delete/%my_node_message'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_node_message_delete_confirm', 4),
    'access arguments' => array('administer my_node_message'),
    'type' => MENU_CALLBACK,
    'file' => 'my_node_message.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function my_node_message_permission() {
  return array(
    'administer my_node_message' => array(
      'title' => t('administer my_node_message'),
      'description' => t('Assign administer my_node_message.'),
    ),
    'view my_node_message table' => array(
      'title' => t('view my_node_message table'),
      'description' => t('View mypriceminus table.'),
    ),
  );
}

/**
 * Implements hook_init().
 */
function my_node_message_init() {
}


function my_node_message_load($type) {
  $utm = &drupal_static(__FUNCTION__, array());
  if (!isset($utm[$type])) {
    $utm[$type] = db_query("SELECT * FROM {my_node_message} WHERE type = :type", array(':type' => $type))->fetchObject();
  }
  return $utm[$type];
}

function my_node_message_types_load() {
  $types = &drupal_static(__FUNCTION__);
  if (!isset($types)) {
    $types = db_query("SELECT type FROM {my_node_message}")->fetchCol();
  }
  return $types;
}


/**
 * Implements hook_node_type_delete().
 */
function my_node_message_node_type_delete($info) {
  db_query('DELETE FROM {my_node_message} WHERE type = :type', array(':type' => $info->type));
}

/**
 * Implements hook_form_alter().
 */
function my_node_message_form_alter(&$form, $form_state, $form_id) {
  if (isset($form['type']) && isset($form['#node']) && $form['type']['#value'] . '_node_form' == $form_id) {
    $node = $form['#node'];
	$type = db_query("SELECT type FROM {my_node_message} WHERE type = :type", array(':type' => $node->type))->fetchField();
	if ($type) {
      $form['my_node_message_send'] = array(
        '#type' => 'checkbox',
        '#title' => 'Надіслати новину партнерам на пошту',
		'#weight' => 99,
      );
	}
  }
}


/**
 * Implements hook_node_insert().
 */
function my_node_message_node_insert($node) {
  if (isset($node->my_node_message_send) && $node->my_node_message_send) {
    $message = my_node_message_load($node->type);
    if ($message) {
	  my_node_message_send_mail($message, $node);
    }
  }
}


/**
 * Implements hook_node_update().
 */
function my_node_message_node_update($node) {
  if (isset($node->my_node_message_send) && $node->my_node_message_send) {
    $message = my_node_message_load($node->type);
    if ($message) {
	  my_node_message_send_mail($message, $node);
    }
  }
}



function my_node_message_send_mail($message, $node) {
	    $body = $message->body;
		$body = token_replace($body, array('node' => $node));
        $mes = array(
          // 'to' => $message->mail_to,
          'subject' => $message->title_from,
          'body' => $body,
          'headers' => array(
            'From' => $message->mail_from,
			'Sender' => $message->name_from,
			'Return-Path' => $message->mail_from,
            'MIME-Version' => '1.0',
            'Content-Type' => 'text/html;charset=utf-8',
          ),
        );
        $system = drupal_mail_system('my_node_message_node', 'send');
		$addresses = explode(',', $message->mail_to);
        foreach ($addresses as $to) {
		  $to = trim($to);
		  $mes['to'] = $to;
          if (!$system->mail($mes)) {
            watchdog('my_node_message', 'Помилка, повідомлення не надіслано.');
          }
		}
}





